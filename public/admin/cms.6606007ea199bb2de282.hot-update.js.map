{"version":3,"file":"cms.6606007ea199bb2de282.hot-update.js","sources":["webpack:///./src/components/AddNewJob.js","webpack:///./src/components/JobWidget/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\n\nfunction AddNewJob({\n  addNewJob,\n  editJob,\n  jobDetails = {\n    name: \"\",\n    pay: \"\",\n    location: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    description: \"\",\n  },\n}) {\n  const [name, setName] = useState(jobDetails.name);\n  const [pay, setPay] = useState(jobDetails.pay);\n  const [location, setLocation] = useState(jobDetails.location);\n  const [email, setEmail] = useState(jobDetails.email);\n  const [phoneNumber, setPhoneNumber] = useState(jobDetails.phoneNumber);\n  const [description, setDescription] = useState(jobDetails.description);\n  const submit = (e) => {\n    e.preventDefault();\n    if (jobDetails._id !== \"\") {\n      editJob({\n        _id: jobDetails._id,\n        name,\n        pay,\n        location,\n        email,\n        phoneNumber,\n        description,\n      });\n    } else {\n      addNewJob({\n        name,\n        pay,\n        location,\n        email,\n        phoneNumber,\n        description,\n      });\n    }\n  };\n  return (\n    <Container className=\"jobdetails_container\">\n      <Form onSubmit={submit}>\n        <FormGroup>\n          <Label for=\"jobName\">Job Name:</Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            id=\"jobName\"\n            placeholder=\"Enter Job Name here...\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"payRate\">Pay Rate (optional):</Label>\n          <Input\n            type=\"number\"\n            name=\"pay\"\n            id=\"payRate\"\n            value={pay}\n            onChange={(e) => setPay(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"location\">Location (optional):</Label>\n          <Input\n            type=\"text\"\n            name=\"location\"\n            id=\"location\"\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"email\">Email (optional):</Label>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"phoneNumber\">Phone Number (optional):</Label>\n          <Input\n            type=\"text\"\n            name=\"phoneNumber\"\n            id=\"phoneNumber\"\n            value={phoneNumber}\n            onChange={(e) => setPhoneNumber(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"jobDescription\">Description</Label>\n          <Input\n            type=\"textarea\"\n            name=\"description\"\n            id=\"jobDescription\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </FormGroup>\n        <Button color=\"info\">Submit</Button>\n      </Form>\n    </Container>\n  );\n}\n\nexport default AddNewJob;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Button, Container, Row } from \"reactstrap\";\nimport JobList from \"../../components/JobList\";\nimport AddNewJob from \"../../components/AddNewJob\";\nexport default class JobWidgetControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { jobs: [], addNewJob: false };\n    // this.handleClick = this.handleClick.bind(this);\n  }\n  onChange = (event, editor) => {\n    //   const data = editor.getData();\n    //   this.props.onChange(data);\n  };\n  addNewJob = (job) => {\n    this.setState({\n      jobs: [...this.state.jobs, job],\n    });\n  };\n  editJob = (newjob) => {\n    this.setState({\n      jobs: this.state.jobs.map((job) =>\n        job._id === newjob._id ? newjob : job\n      ),\n    });\n  };\n  componentDidMount() {\n    this.setState({\n      jobs: [\n        {\n          name: \"Job 1\",\n          description: \"This is the description of first job\",\n          pay: 12,\n          location: \"surrey\",\n          email: \"sample@example.com\",\n        },\n        {\n          name: \"Job 2\",\n          description: \"This is the description of first job\",\n          pay: 12,\n          location: \"surrey\",\n          email: \"sample@example.com\",\n        },\n        {\n          name: \"Job 3\",\n          description:\n            \"This is the description of first job This is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first jobThis is the description of first job\",\n          pay: 12,\n          location: \"surrey\",\n          email: \"sample@example.com\",\n        },\n      ],\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Helmet>\n          <link\n            rel=\"stylesheet\"\n            href=\"/admin/customWidgetCss/bootstrap.min.css\"\n          />\n          <link rel=\"stylesheet\" href=\"/admin/customWidgetCss/jobDetails.css\" />\n        </Helmet>\n        <Container\n          className=\"py-5 position-relative\"\n          style={{ minHeight: \"80vh\" }}\n        >\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <h1 className=\"mb-3\">List of jobs:</h1>\n            <Button color=\"info\">Add new job</Button>\n          </div>\n\n          {this.state.jobs.length > 0 ? (\n            <Row>\n              <JobList jobs={this.state.jobs} admin />\n            </Row>\n          ) : (\n            <h1>Sorry, no jobs found come back later</h1>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n"],"mappings":"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","sourceRoot":""}